scenario CalamityOnTheHorizon {
  TONKA_PORTRAIT = "raider"
  TONKAA_TITLE = "Warchief Tonkaa"
  ORMU_PORTRAIT = "warrior"
  ORMU_TITLE = "Ormu"
  KAGAALU_PORTRAIT = "kagaalu"
  KAGAALU_TITLE = "Kagaalu"
  WARRIORS_TO_TRAIN = 3

  OBJECTIVES = [
    trainWarriors: [
      id: "trainWarriors",
      title: "Muster for battle",
      image: "warrior",
      description: "Collect gold and train $WARRIORS_TO_TRAIN warriors. Tonkaa must survive.",
      state: ObjectiveStates.active
    ],
    investigateThunder: [
      id: "investigateThunder",
      title: "Ominous rumbling",
      image: "raider",
      description: "Take Tonkaa and two warriors to the western shore to investigate the source of the thunder. Tonkaa must survive.",
      state: ObjectiveStates.active
    ],
    findKagaalu: [
      id: "findKagaalu",
      title: "Rogash's favorite",
      image: "kagaalu",
      description: "Search for the great Sarcomancer, Kagaalu, north of your base camp.",
      state: ObjectiveStates.active
    ],
    goToSwamp: [
      id: "goToSwamp",
      title: "Safety in the bog",
      image: "totem",
      description: "Find a way to cross the river and reach the safety of Moheela swamp. Kagaalu must survive!",
      state: ObjectiveStates.active
    ],
    findCanoes: [
      id: "findCanoes",
      title: "Find canoes",
      image: "canoe",
      description: "(OPTIONAL) Find canoes to cross the river.",
      state: ObjectiveStates.active
    ]
  ]

  onStart {
    Server.setTimeoutEnabled(false)
    players = Game.players
    kagaaluPlayer = players.1
    startingLocations = Game.grid.startingLocations
    @claimStartingUnits(players.0, startingLocations.0, 3, ["thrall", "warrior", "tonkaa", "sanghoyCamp"])
    @claimStartingUnits(kagaaluPlayer, startingLocations.1, 2, ["kagaalu", "runestoneOfRogash", "totem"])
    for unit in Game.grid.allUnits.where(=> $0.type.id == "canoe") {
      unit.setOwner(kagaaluPlayer)
    }
    @claimStartingUnits(players.2, startingLocations.2, 4, ["settler", "rifleman", "ironclad", "barracks"])

    hostileSanghoyPlayer = players.3
    for unit in Game.grid.allUnits\
        .where(=> $0.owner.id == Game.nature.id && $0.type.id in ["thrall", "warrior", "raider", "totem", "sanghoyCamp", "warCouncil"]) {
      unit.setOwner(hostileSanghoyPlayer)
    }
  }

  claimStartingUnits(player, startingLocation, searchRadius, allowedTypes) {
    for unit in Game.unitsInRange(startingLocation, searchRadius) {
      if unit.type.id in allowedTypes {
        unit.setOwner(player)
      }
    }
  }

  campCoordinates => Game.currentPlayer.ownedUnits.first(=> $0.type.id == "sanghoyCamp").coordinates
  westernShoreCoordinates => Game.grid.cells.first(=> $0?.comment == "westernShore").coordinates

  playBombardmentSound {
    Game.playSound(campCoordinates(), "ironclad", SoundTypes.attack, true)
  }

  makeCreepsAttackPlayer {
    if Game.campaign.difficulty == "hard" {
      # Console.println("Creeeps attacking player")
      playerId = Game.players.0.id
      for creep in Game.nature.ownedUnits \
          .where(=> $0.type.a > 0) {
          # .take(15) {
        creepCoordinates = creep.coordinates
        target = Game.grid.ringAround(creepCoordinates, 1) \
          .first(=> $0.content?.owner?.id == playerId)
        if target != null {
          # Console.println("Creeeps attacking player unit $(target.content.type.id)")
          Server.attack(creepCoordinates, target.coordinates, creepCoordinates, 0)
        }
      }
    }
  }

  onFirstRender {
    if Game.currentScenario.objectives.isEmpty {
      Server.setTimeoutEnabled(false)
      Game.,positionCamera(campCoordinates()) \
        .,zoomCamera(8) \
        .wait(1.0)
      for _ in 2.times {
        playBombardmentSound()
      }
      Game.,wait(1.0) \
        .,showDialog(TONKA_PORTRAIT, Game.players.0.id, TONKAA_TITLE, "Did you hear that?")
      playBombardmentSound()
      Game.,showDialog(TONKA_PORTRAIT, Game.players.0.id, TONKAA_TITLE, "Thunders rumble on the seas, yet the skies are clear?") \
        .,showDialog(TONKA_PORTRAIT, Game.players.0.id, TONKAA_TITLE, "We should train more warriors and investigate. You mongrels, move out! My men need those provisions!") \
        .,showDialog("thrall", Game.players.0.id, "Thrall", "No, not the whip!") \
        .currentScenario.addObjective(OBJECTIVES.trainWarriors)
      Game.refreshState()
      Server.setTimeoutEnabledOnUserAction(true)
    }
  }

  onTurnStart {
    makeCreepsAttackPlayer()
  }

  onCardPlay(card) {
    if Game.currentScenario.objectiveState(OBJECTIVES.trainWarriors.id) == ObjectiveStates.active \
        && card.type.id == "warrior" \
        && Game.currentPlayer.ownedUnits.count(=> $0.type.id == "warrior") >= WARRIORS_TO_TRAIN {
      Server.setTimeoutEnabled(false)
      Game.currentScenario.updateObjective(OBJECTIVES.trainWarriors.id, [state: ObjectiveStates.completed])
      Game.refreshState()
      playBombardmentSound()
      Game.,showDialog(TONKA_PORTRAIT, Game.players.0.id, TONKAA_TITLE, "Waanru, Uim, with me! We need to go to the shore and see if our fishermen are in danger!") \
          .,showDialog(TONKA_PORTRAIT, Game.players.0.id, TONKAA_TITLE, "$ORMU_TITLE, you stay here and watch for intruders!") \
          .currentScenario.,addObjective(OBJECTIVES.investigateThunder) \
            .addRevealedCell(westernShoreCoordinates())
      Server.setTimeoutEnabledOnUserAction(true)
    }
  }

  onMove(unit, from, to) {
    if Game.currentPlayerIndex == 0 {
      visibleCells = Game.grid.visibleCells(Game.currentPlayer)
      if Game.currentScenario.objectiveState(OBJECTIVES.investigateThunder.id) == ObjectiveStates.active \
          && visibleCells.any(=> $0.content?.type?.id in ["rifleman", "settler", "ironclad"]) {
        Server.setTimeoutEnabled(false)
        Game.currentScenario.updateObjective(OBJECTIVES.investigateThunder.id, [state: ObjectiveStates.completed])
        Game.,refreshState() \
          .,showDialog(TONKA_PORTRAIT, Game.players.0.id, TONKAA_TITLE, "What the...?")
        playBombardmentSound()
        for unit in Game.unitsInRange(westernShoreCoordinates(), 8).where(=> $0.owner.id == Game.currentPlayer.id) {
          unit.destroy(unit)
        }
        Game.,refreshState() \
          .,wait(1.5) \
          .,positionCamera(campCoordinates()) \
          .,zoomCamera(7) \
          .,showDialog(ORMU_PORTRAIT, Game.players.0.id, ORMU_TITLE, "Thunder again, and Tonkaa is yet to return...")
        # playBombardmentSound()
        for cell in Game.grid.cellsAround(westernShoreCoordinates(), 4, Game.currentPlayer) {
          Game.currentScenario.addRevealedCell(cell.coordinates)
        }
        Game.,refreshState() \
          .,positionCamera(westernShoreCoordinates()) \
          .,zoomCamera(7) \
          .,wait(2) \
          .,showMessage("The outsiders are dangerous! Don't go there!") \
          .,wait(1.5) \
          .,positionCamera(campCoordinates()) \
          .,showDialog(ORMU_PORTRAIT, Game.players.0.id, ORMU_TITLE, "I need to seek council of the great sarcomancer, Kagaalu! His totem lies north, near the edge of the jungle.") \
          .currentScenario.addObjective(OBJECTIVES.findKagaalu)
        Game.refreshState()
        Server.setTimeoutEnabledOnUserAction(true)
      } else if Game.currentScenario.objectiveState(OBJECTIVES.findKagaalu.id) == ObjectiveStates.active \
          && visibleCells.any(=> $0.content?.type?.id == "kagaalu") {
        Server.setTimeoutEnabled(false)
        Game.currentScenario.updateObjective(OBJECTIVES.findKagaalu.id, [state: ObjectiveStates.completed])
        Game.,refreshState() \
          .,positionCamera(Game.grid.cells.first(=> $0.content?.type?.id == "kagaalu").coordinates) \
          .,zoomCamera(7) \
          .,showDialog(ORMU_PORTRAIT, Game.players.0.id, ORMU_TITLE, "Great one! Thunders are echoing in the clear sky! Tonkaa went to investigate, but neither him nor our warriors have returned yet.") \
          .,showDialog(KAGAALU_PORTRAIT, Game.players.1.id, KAGAALU_TITLE, "Yes, I divinated with bones and entrails of beasts for many days now, and Rogash spoke to me.") \
          .,showDialog(KAGAALU_PORTRAIT, Game.players.1.id, KAGAALU_TITLE, "These are the outsiders that captured many islands already! Their canoes are of iron, their numbers vast.") \
          .,showDialog(KAGAALU_PORTRAIT, Game.players.1.id, KAGAALU_TITLE, "Our tribe is too weak to stop them. We must move and find shelter across the great river Dair.") \
          .,showDialog(ORMU_PORTRAIT, Game.players.0.id, ORMU_TITLE, "But the far side of the river is controlled by our enemies, Kaatlaa, Teruu and other tribes that serve the great chieftain Pyracmon!") \
          .,showDialog(KAGAALU_PORTRAIT, Game.players.1.id, KAGAALU_TITLE, "We will have to evade them and seek refuge in the swamp of Moheela. Let's not waste more time!")
        kagaalu = Game.grid.allUnits.first(=> $0.type.id == "kagaalu")
        kagaalu.setOwner(Game.currentPlayer)
        Game.currentPlayer.setHero(kagaalu)
        swampCell = Game.grid.cells.first(=> $0?.comment == "swamp")
        kagaaluSwampDistance = swampCell.distance(kagaalu.coordinates)
        northSwampCells = Game.grid.ringAround(swampCell.coordinates, 1) \
          .where(=> $0.distance(kagaalu.coordinates) > kagaaluSwampDistance)
        for northSwampCell in northSwampCells {
          Game.currentScenario.addRevealedCell(northSwampCell.coordinates)
        }
        Game.currentScenario.addObjective(OBJECTIVES.goToSwamp)
        Game.,refreshState() \
          .,showDialog(KAGAALU_PORTRAIT, Game.players.0.id, KAGAALU_TITLE, "Crossing the river won't be easy, but I have hidden a few Canoes somwhere on the river bank...") \
          .currentScenario.addObjective(OBJECTIVES.findCanoes)
        Game.refreshState()
        Server.setTimeoutEnabledOnUserAction(true)
      } else if Game.currentScenario.objectiveState(OBJECTIVES.findCanoes.id) == ObjectiveStates.active \
          && visibleCells.any(=> $0.content?.type?.id == "canoe") {
        for unit in Game.grid.allUnits.where(=> $0.type.id == "canoe") {
          unit.setOwner(Game.currentPlayer)
        }
        Game.showDialog(KAGAALU_PORTRAIT, Game.players.0.id, KAGAALU_TITLE, "There are our canoes! Swiftly now!")
        Game.currentScenario.updateObjective(OBJECTIVES.findCanoes.id, [state: ObjectiveStates.completed])
        Game.refreshState()
      } else if visibleCells.any(=> $0?.comment == "swamp") {
        Game.currentScenario.updateObjective(OBJECTIVES.goToSwamp.id, [state: ObjectiveStates.completed])
        Server.win(Game.currentPlayer)
      }
    }
  }

  onDie(unit) {
    if unit.type.id == "tonkaa" && \
        (Game.currentScenario.objectiveState(OBJECTIVES.trainWarriors.id) == ObjectiveStates.active \
          || Game.currentScenario.objectiveState(OBJECTIVES.investigateThunder.id) == ObjectiveStates.active) {
      Game.showMessage("Tonkaa died!")
      Game.currentScenario.updateObjective(OBJECTIVES.trainWarriors.id, [state: ObjectiveStates.failed])
      Game.lose(Game.players.0)
      Game.refreshState()
    } else if unit.type.id == "kagaalu" {
      Game.showMessage("Kagaalu died!")
      Game.currentScenario.updateObjective(OBJECTIVES.goToSwamp.id, [state: ObjectiveStates.failed])
      Game.lose(Game.players.0)
      Game.refreshState()
    }
  }

  checkVictory => null
}